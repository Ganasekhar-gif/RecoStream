version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: recostream-db
    environment:
      POSTGRES_DB: recostream
      POSTGRES_USER: recostream_user
      POSTGRES_PASSWORD: recostream_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - recostream-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U recostream_user -d recostream"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RecoStream Application
  recostream-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: recostream-app
    environment:
      - DATABASE_URL=postgresql://recostream_user:recostream_password@postgres:5432/recostream
      - SECRET_KEY=your-secret-key-change-this-in-production
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - VITE_TMDB_API_KEY=d902a2d3fc329d04f455377749413244
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - recostream-network
    volumes:
      - ./data:/app/data
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: recostream-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - recostream-app
    networks:
      - recostream-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  recostream-network:
    driver: bridge
